digraph "classes_palm_tracer" {
rankdir=BT
charset="utf-8"
"palm_tracer.PALMTracer.PALMTracer" [color="black", fontcolor="black", label=<{PALMTracer|dlls : dict[str, ctypes.CDLL]<br ALIGN="LEFT"/>graph : plt.Figure \| None<br ALIGN="LEFT"/>localizations : pd.DataFrame \| None<br ALIGN="LEFT"/>logger<br ALIGN="LEFT"/>settings<br ALIGN="LEFT"/>tracks : pd.DataFrame \| None<br ALIGN="LEFT"/>visualization : np.ndarray \| None<br ALIGN="LEFT"/>|is_dll_valid()<br ALIGN="LEFT"/>process()<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#e6e6ac"];
"palm_tracer.PALMTracerWidget.PALMTracerWidget" [color="black", fontcolor="black", label=<{PALMTracerWidget|last_file : str<br ALIGN="LEFT"/>pt<br ALIGN="LEFT"/>viewer : str<br ALIGN="LEFT"/>|auto_threshold()<br ALIGN="LEFT"/>process()<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#e6e6ac"];

"palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [color="black", fontcolor="black", label=<{BaseSettingGroup|active<br ALIGN="LEFT"/>label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>widget<br ALIGN="LEFT"/>|always_active()<br ALIGN="LEFT"/>from_dict(data: dict[str, Any]): 'BaseSettingGroup'<br ALIGN="LEFT"/>get_setting_names(): list[str]<br ALIGN="LEFT"/>get_value()<br ALIGN="LEFT"/>hide()<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>initialize_ui()<br ALIGN="LEFT"/>remove_header()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: Any)<br ALIGN="LEFT"/>show()<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>toggle_active(state: int)<br ALIGN="LEFT"/>tostring(line_prefix: str): str<br ALIGN="LEFT"/>update_from_dict(data: dict[str, Any])<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.Batch.Batch" [color="black", fontcolor="black", label=<{Batch|label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|get_paths(sue6ix: str): list[str]<br ALIGN="LEFT"/>get_stacks(): list[np.ndarray]<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.Calibration.Calibration" [color="black", fontcolor="black", label=<{Calibration|label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.Filtering.Filtering" [color="black", fontcolor="black", label=<{Filtering|label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|initialize_ui()<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.FilteringGF.FilteringGF" [color="black", fontcolor="black", label=<{FilteringGF|label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.FilteringT.FilteringT" [color="black", fontcolor="black", label=<{FilteringT|label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.GaussianFit.GaussianFit" [color="black", fontcolor="black", label=<{GaussianFit|label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.Localization.Localization" [color="black", fontcolor="black", label=<{Localization|label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|initialize_ui()<br ALIGN="LEFT"/>toggle_fit_mode(mode)<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.SplineFit.SplineFit" [color="black", fontcolor="black", label=<{SplineFit|label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.Tracking.Tracking" [color="black", fontcolor="black", label=<{Tracking|label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.VisualizationGraph.VisualizationGraph" [color="black", fontcolor="black", label=<{VisualizationGraph|label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.VisualizationHR.VisualizationHR" [color="black", fontcolor="black", label=<{VisualizationHR|label : str<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="filled", fillcolor="#e6ace6"];

"palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [color="black", fontcolor="black", label=<{BaseSettingType|label : str<br ALIGN="LEFT"/>layout<br ALIGN="LEFT"/>|add_row(box)<br ALIGN="LEFT"/>connect(f: Any)<br ALIGN="LEFT"/>emit(value: Any)<br ALIGN="LEFT"/>from_dict(data: dict[str, Any]): 'BaseSettingType'<br ALIGN="LEFT"/><I>get_value</I>(): Any<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/><I>reset</I>()<br ALIGN="LEFT"/><I>set_value</I>(value: Any)<br ALIGN="LEFT"/><I>to_dict</I>(): dict[str, Any]<br ALIGN="LEFT"/><I>update_from_dict</I>(data: dict[str, Any])<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.BrowseFile.BrowseFile" [color="black", fontcolor="black", label=<{BrowseFile|box<br ALIGN="LEFT"/>default : str<br ALIGN="LEFT"/>label<br ALIGN="LEFT"/>value : str<br ALIGN="LEFT"/>|browse_file()<br ALIGN="LEFT"/>get_value(): str<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: str)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>update_from_dict(data: dict[str, Any])<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.CheckBox.CheckBox" [color="black", fontcolor="black", label=<{CheckBox|box<br ALIGN="LEFT"/>default : bool<br ALIGN="LEFT"/>label<br ALIGN="LEFT"/>value : bool<br ALIGN="LEFT"/>|get_value(): bool<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: bool)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>update_from_dict(data: dict[str, Any])<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.CheckRangeFloat.CheckRangeFloat" [color="black", fontcolor="black", label=<{CheckRangeFloat|active<br ALIGN="LEFT"/>box : list[QDoubleSpinBox]<br ALIGN="LEFT"/>default : list[float]<br ALIGN="LEFT"/>label<br ALIGN="LEFT"/>limit : list[float]<br ALIGN="LEFT"/>precision : int<br ALIGN="LEFT"/>value : list[float]<br ALIGN="LEFT"/>|check_max(value: float)<br ALIGN="LEFT"/>check_min(value: float)<br ALIGN="LEFT"/>get_value(): list[float]<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: list[float])<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>toggle_active(state: int)<br ALIGN="LEFT"/>update_from_dict(data: dict[str, Any])<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.CheckRangeInt.CheckRangeInt" [color="black", fontcolor="black", label=<{CheckRangeInt|active<br ALIGN="LEFT"/>box : list[QSpinBox]<br ALIGN="LEFT"/>default : list[int]<br ALIGN="LEFT"/>label<br ALIGN="LEFT"/>limit : list[int]<br ALIGN="LEFT"/>value : list[int]<br ALIGN="LEFT"/>|check_max(value: int)<br ALIGN="LEFT"/>check_min(value: int)<br ALIGN="LEFT"/>get_value(): list[int]<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: list[int])<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>toggle_active(state: int)<br ALIGN="LEFT"/>update_from_dict(data: dict[str, Any])<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.Combo.Combo" [color="black", fontcolor="black", label=<{Combo|box<br ALIGN="LEFT"/>default : int<br ALIGN="LEFT"/>items : list[str]<br ALIGN="LEFT"/>label<br ALIGN="LEFT"/>value : int<br ALIGN="LEFT"/>|get_value(): int<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: int)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>update_from_dict(data: dict[str, Any])<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.FileList.FileList" [color="black", fontcolor="black", label=<{FileList|box<br ALIGN="LEFT"/>buttons : dict[str, QPushButton]<br ALIGN="LEFT"/>default : int<br ALIGN="LEFT"/>items : list[str]<br ALIGN="LEFT"/>label<br ALIGN="LEFT"/>value : int<br ALIGN="LEFT"/>|add_file()<br ALIGN="LEFT"/>clear_files()<br ALIGN="LEFT"/>get_list(): list[str]<br ALIGN="LEFT"/>get_selected(): str<br ALIGN="LEFT"/>get_value(): int<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>remove_file()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: int)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>update_box()<br ALIGN="LEFT"/>update_from_dict(data: dict[str, Any])<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.SignalWrapper.SignalWrapper" [color="black", fontcolor="black", label=<{SignalWrapper|<br ALIGN="LEFT"/>|connect(f)<br ALIGN="LEFT"/>emit(value)<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.SpinFloat.SpinFloat" [color="black", fontcolor="black", label=<{SpinFloat|box<br ALIGN="LEFT"/>default : float<br ALIGN="LEFT"/>label<br ALIGN="LEFT"/>max : float<br ALIGN="LEFT"/>min : float<br ALIGN="LEFT"/>precision : int<br ALIGN="LEFT"/>step : float<br ALIGN="LEFT"/>value : float<br ALIGN="LEFT"/>|get_value(): float<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: float)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>update_from_dict(data: dict[str, Any])<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.SpinInt.SpinInt" [color="black", fontcolor="black", label=<{SpinInt|box<br ALIGN="LEFT"/>default : int<br ALIGN="LEFT"/>label<br ALIGN="LEFT"/>max : int<br ALIGN="LEFT"/>min : int<br ALIGN="LEFT"/>step : int<br ALIGN="LEFT"/>value : int<br ALIGN="LEFT"/>|get_value(): int<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: int)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>update_from_dict(data: dict[str, Any])<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#acace6"];

"palm_tracer.Tools.Logger.Logger" [color="black", fontcolor="black", label=<{Logger|file_handle : TextIO<br ALIGN="LEFT"/>filename : str<br ALIGN="LEFT"/>|add(msg: str)<br ALIGN="LEFT"/>close()<br ALIGN="LEFT"/>open(filename: str)<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#ace6ac"];
"palm_tracer.Tools.Monitoring.Monitoring" [color="black", fontcolor="black", label=<{Monitoring|interval : float<br ALIGN="LEFT"/>n_entries<br ALIGN="LEFT"/>|add_test_info(name: str)<br ALIGN="LEFT"/>get_y_range(data, padding_ratio: float)<br ALIGN="LEFT"/>monitor()<br ALIGN="LEFT"/>save(filename: str, full_html: bool)<br ALIGN="LEFT"/>start(interval: float)<br ALIGN="LEFT"/>stop()<br ALIGN="LEFT"/>tostring(): str<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#ace6ac"];

"palm_tracer.Settings.Settings.Settings" [color="black", fontcolor="black", label=<{Settings|batch<br ALIGN="LEFT"/>calibration<br ALIGN="LEFT"/>filtering<br ALIGN="LEFT"/>localization<br ALIGN="LEFT"/>tracking<br ALIGN="LEFT"/>visualization_graph<br ALIGN="LEFT"/>visualization_hr<br ALIGN="LEFT"/>|from_dict(data: dict[str, Any]): 'Settings'<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>tostring(): str<br ALIGN="LEFT"/>update_from_dict(data: dict[str, Any])<br ALIGN="LEFT"/>}>, shape="record", style="filled", fillcolor="#e6e6ac"];

"palm_tracer.PALMTracer.PALMTracer" -> "palm_tracer.PALMTracerWidget.PALMTracerWidget" [arrowhead="diamond", arrowtail="none", fontcolor="#006400", label="pt", style="filled", fillcolor="#e6e6ac"];

"palm_tracer.Settings.Groups.Batch.Batch" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.Calibration.Calibration" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.Filtering.Filtering" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.FilteringGF.FilteringGF" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.FilteringT.FilteringT" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.Localization.Localization" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.SplineFit.SplineFit" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.Tracking.Tracking" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.VisualizationGraph.VisualizationGraph" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#e6ace6"];
"palm_tracer.Settings.Groups.VisualizationHR.VisualizationHR" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#e6ace6"];

"palm_tracer.Settings.Types.BrowseFile.BrowseFile" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.CheckBox.CheckBox" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.CheckRangeFloat.CheckRangeFloat" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.CheckRangeInt.CheckRangeInt" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.Combo.Combo" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.FileList.FileList" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.SignalWrapper.SignalWrapper" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="diamond", arrowtail="none", fontcolor="#006400", label="__signal", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.SpinFloat.SpinFloat" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#acace6"];
"palm_tracer.Settings.Types.SpinInt.SpinInt" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none", style="filled", fillcolor="#acace6"];

"palm_tracer.Settings.Settings.Settings" -> "palm_tracer.PALMTracer.PALMTracer" [arrowhead="diamond", arrowtail="none", fontcolor="#006400", label="settings", style="filled", fillcolor="#e6e6ac"];
"palm_tracer.Tools.Logger.Logger" -> "palm_tracer.PALMTracer.PALMTracer" [arrowhead="diamond", arrowtail="none", fontcolor="#006400", label="logger", style="filled", fillcolor="#e6e6ac"];
}
