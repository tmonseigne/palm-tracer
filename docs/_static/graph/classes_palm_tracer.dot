digraph "classes_palm_tracer" {
rankdir=BT
charset="utf-8"
"palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [color="black", fontcolor="black", label=<{BaseSettingGroup|active : bool<br ALIGN="LEFT"/>setting_list : dict<br ALIGN="LEFT"/>|from_dict(data: dict[str, Any]): 'BaseSettingGroup'<br ALIGN="LEFT"/>get_setting_names(): list[str]<br ALIGN="LEFT"/>get_value()<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: Any)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>tostring(line_prefix: str): str<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"palm_tracer.Settings.Groups.Batch.Batch" [color="black", fontcolor="black", label=<{Batch|setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"palm_tracer.Settings.Groups.Calibration.Calibration" [color="black", fontcolor="black", label=<{Calibration|setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"palm_tracer.Settings.Groups.GaussianFit.GaussianFit" [color="black", fontcolor="black", label=<{GaussianFit|setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"palm_tracer.Settings.Groups.Localisation.Localisation" [color="black", fontcolor="black", label=<{Localisation|setting_list : dict<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"palm_tracer.Settings.Groups.Batch.Batch" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none"];
"palm_tracer.Settings.Groups.Calibration.Calibration" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none"];
"palm_tracer.Settings.Groups.GaussianFit.GaussianFit" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none"];
"palm_tracer.Settings.Groups.Localisation.Localisation" -> "palm_tracer.Settings.Groups.BaseSettingGroup.BaseSettingGroup" [arrowhead="empty", arrowtail="none"];
"palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [color="black", fontcolor="black", label=<{BaseSettingType|label : str<br ALIGN="LEFT"/>layout<br ALIGN="LEFT"/>|add_row(box)<br ALIGN="LEFT"/><I>from_dict</I>(data: dict[str, Any]): 'BaseSettingType'<br ALIGN="LEFT"/><I>get_value</I>(): Any<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/><I>reset</I>()<br ALIGN="LEFT"/><I>set_value</I>(value: Any)<br ALIGN="LEFT"/><I>to_dict</I>(): dict[str, Any]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"palm_tracer.Settings.Types.BrowseFile.BrowseFile" [color="black", fontcolor="black", label=<{BrowseFile|box<br ALIGN="LEFT"/>default : str<br ALIGN="LEFT"/>value : str<br ALIGN="LEFT"/>|browse_file()<br ALIGN="LEFT"/>from_dict(data: dict[str, Any]): 'BrowseFile'<br ALIGN="LEFT"/>get_value(): str<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: str)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"palm_tracer.Settings.Types.CheckBox.CheckBox" [color="black", fontcolor="black", label=<{CheckBox|box<br ALIGN="LEFT"/>default : bool<br ALIGN="LEFT"/>value : bool<br ALIGN="LEFT"/>|from_dict(data: dict[str, Any]): 'CheckBox'<br ALIGN="LEFT"/>get_value(): bool<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: bool)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"palm_tracer.Settings.Types.Combo.Combo" [color="black", fontcolor="black", label=<{Combo|box<br ALIGN="LEFT"/>default : int<br ALIGN="LEFT"/>items : list[str]<br ALIGN="LEFT"/>value : int<br ALIGN="LEFT"/>|from_dict(data: dict[str, Any]): 'Combo'<br ALIGN="LEFT"/>get_value(): int<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: int)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"palm_tracer.Settings.Types.SpinFloat.SpinFloat" [color="black", fontcolor="black", label=<{SpinFloat|box<br ALIGN="LEFT"/>default : float<br ALIGN="LEFT"/>max : float<br ALIGN="LEFT"/>min : float<br ALIGN="LEFT"/>precision : int<br ALIGN="LEFT"/>step : float<br ALIGN="LEFT"/>value : float<br ALIGN="LEFT"/>|from_dict(data: dict[str, Any]): 'SpinFloat'<br ALIGN="LEFT"/>get_value(): float<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: float)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"palm_tracer.Settings.Types.SpinInt.SpinInt" [color="black", fontcolor="black", label=<{SpinInt|box<br ALIGN="LEFT"/>default : int<br ALIGN="LEFT"/>max : int<br ALIGN="LEFT"/>min : int<br ALIGN="LEFT"/>step : int<br ALIGN="LEFT"/>value : int<br ALIGN="LEFT"/>|from_dict(data: dict[str, Any]): 'SpinInt'<br ALIGN="LEFT"/>get_value(): int<br ALIGN="LEFT"/>initialize()<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>set_value(value: int)<br ALIGN="LEFT"/>to_dict(): dict[str, Any]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"palm_tracer.Settings.Types.BrowseFile.BrowseFile" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none"];
"palm_tracer.Settings.Types.CheckBox.CheckBox" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none"];
"palm_tracer.Settings.Types.Combo.Combo" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none"];
"palm_tracer.Settings.Types.SpinFloat.SpinFloat" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none"];
"palm_tracer.Settings.Types.SpinInt.SpinInt" -> "palm_tracer.Settings.Types.BaseSettingType.BaseSettingType" [arrowhead="empty", arrowtail="none"];
"palm_tracer.widget.PALMTracerWidget" [color="black", fontcolor="black", label=<{PALMTracerWidget|dll : dict<br ALIGN="LEFT"/>settings<br ALIGN="LEFT"/>viewer : str<br ALIGN="LEFT"/>|on_click()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"palm_tracer.Settings.Settings.Settings" [color="black", fontcolor="black", label=<{Settings|<br ALIGN="LEFT"/>|get_group_names(): list[str]<br ALIGN="LEFT"/>reset()<br ALIGN="LEFT"/>tostring(): str<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"palm_tracer.Settings.Settings.Settings" -> "palm_tracer.widget.PALMTracerWidget" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="settings", style="solid"];
}
